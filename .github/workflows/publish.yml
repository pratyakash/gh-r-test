name: Release-Tag

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ['Dev-Build']
    types:
      - completed

jobs:
  publish-gpr:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        env:
          NODE_AUTH_TOKEN: ${{secrets.GIT_TOKEN}}
          NPM_AUTH_TOKEN: ${{secrets.GIT_TOKEN}}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: '20.x'
          registry-url: https://npm.pkg.github.com/

      - name: Check package version
        run: |
          VERSION=$(node -pe "require('./package.json').version")

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{secrets.GIT_TOKEN}}

      - name: Release Tag
        if: success()
        run: |
          VERSION=$(node -pe "require('./package.json').version")
          git tag "$VERSION"
          git push origin ${{ github.ref }} --tags

      - name: Trigger Dev-Build Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            const { data: workflows } = await github.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const devBuildWorkflow = workflows.find(workflow => workflow.name === 'Dev-Build');
            if (devBuildWorkflow) {
              await github.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: devBuildWorkflow.id
              });
            }
